//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WhoIsBetter.Test.WSTorneo {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WSTorneo.ITorneoService")]
    public interface ITorneoService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITorneoService/CrearTorneo", ReplyAction="http://tempuri.org/ITorneoService/CrearTorneoResponse")]
        int CrearTorneo(int idUsuario, WhoIsBetter.Entity.Torneo torneo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITorneoService/CrearTorneo", ReplyAction="http://tempuri.org/ITorneoService/CrearTorneoResponse")]
        System.Threading.Tasks.Task<int> CrearTorneoAsync(int idUsuario, WhoIsBetter.Entity.Torneo torneo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITorneoService/ObtenerTorneoPorID", ReplyAction="http://tempuri.org/ITorneoService/ObtenerTorneoPorIDResponse")]
        WhoIsBetter.Entity.Torneo ObtenerTorneoPorID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITorneoService/ObtenerTorneoPorID", ReplyAction="http://tempuri.org/ITorneoService/ObtenerTorneoPorIDResponse")]
        System.Threading.Tasks.Task<WhoIsBetter.Entity.Torneo> ObtenerTorneoPorIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITorneoService/ObtenerTorneoPorEnlace", ReplyAction="http://tempuri.org/ITorneoService/ObtenerTorneoPorEnlaceResponse")]
        WhoIsBetter.Entity.Torneo ObtenerTorneoPorEnlace(string enlace);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITorneoService/ObtenerTorneoPorEnlace", ReplyAction="http://tempuri.org/ITorneoService/ObtenerTorneoPorEnlaceResponse")]
        System.Threading.Tasks.Task<WhoIsBetter.Entity.Torneo> ObtenerTorneoPorEnlaceAsync(string enlace);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITorneoService/ActualizarTorneo", ReplyAction="http://tempuri.org/ITorneoService/ActualizarTorneoResponse")]
        void ActualizarTorneo(WhoIsBetter.Entity.Torneo torneo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITorneoService/ActualizarTorneo", ReplyAction="http://tempuri.org/ITorneoService/ActualizarTorneoResponse")]
        System.Threading.Tasks.Task ActualizarTorneoAsync(WhoIsBetter.Entity.Torneo torneo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITorneoService/EliminarTorneo", ReplyAction="http://tempuri.org/ITorneoService/EliminarTorneoResponse")]
        void EliminarTorneo(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITorneoService/EliminarTorneo", ReplyAction="http://tempuri.org/ITorneoService/EliminarTorneoResponse")]
        System.Threading.Tasks.Task EliminarTorneoAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITorneoService/ListarTorneos", ReplyAction="http://tempuri.org/ITorneoService/ListarTorneosResponse")]
        System.Collections.Generic.List<WhoIsBetter.Entity.Torneo> ListarTorneos(System.Nullable<int> idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITorneoService/ListarTorneos", ReplyAction="http://tempuri.org/ITorneoService/ListarTorneosResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WhoIsBetter.Entity.Torneo>> ListarTorneosAsync(System.Nullable<int> idUsuario);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITorneoServiceChannel : WhoIsBetter.Test.WSTorneo.ITorneoService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TorneoServiceClient : System.ServiceModel.ClientBase<WhoIsBetter.Test.WSTorneo.ITorneoService>, WhoIsBetter.Test.WSTorneo.ITorneoService {
        
        public TorneoServiceClient() {
        }
        
        public TorneoServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TorneoServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TorneoServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TorneoServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int CrearTorneo(int idUsuario, WhoIsBetter.Entity.Torneo torneo) {
            return base.Channel.CrearTorneo(idUsuario, torneo);
        }
        
        public System.Threading.Tasks.Task<int> CrearTorneoAsync(int idUsuario, WhoIsBetter.Entity.Torneo torneo) {
            return base.Channel.CrearTorneoAsync(idUsuario, torneo);
        }
        
        public WhoIsBetter.Entity.Torneo ObtenerTorneoPorID(int id) {
            return base.Channel.ObtenerTorneoPorID(id);
        }
        
        public System.Threading.Tasks.Task<WhoIsBetter.Entity.Torneo> ObtenerTorneoPorIDAsync(int id) {
            return base.Channel.ObtenerTorneoPorIDAsync(id);
        }
        
        public WhoIsBetter.Entity.Torneo ObtenerTorneoPorEnlace(string enlace) {
            return base.Channel.ObtenerTorneoPorEnlace(enlace);
        }
        
        public System.Threading.Tasks.Task<WhoIsBetter.Entity.Torneo> ObtenerTorneoPorEnlaceAsync(string enlace) {
            return base.Channel.ObtenerTorneoPorEnlaceAsync(enlace);
        }
        
        public void ActualizarTorneo(WhoIsBetter.Entity.Torneo torneo) {
            base.Channel.ActualizarTorneo(torneo);
        }
        
        public System.Threading.Tasks.Task ActualizarTorneoAsync(WhoIsBetter.Entity.Torneo torneo) {
            return base.Channel.ActualizarTorneoAsync(torneo);
        }
        
        public void EliminarTorneo(int id) {
            base.Channel.EliminarTorneo(id);
        }
        
        public System.Threading.Tasks.Task EliminarTorneoAsync(int id) {
            return base.Channel.EliminarTorneoAsync(id);
        }
        
        public System.Collections.Generic.List<WhoIsBetter.Entity.Torneo> ListarTorneos(System.Nullable<int> idUsuario) {
            return base.Channel.ListarTorneos(idUsuario);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WhoIsBetter.Entity.Torneo>> ListarTorneosAsync(System.Nullable<int> idUsuario) {
            return base.Channel.ListarTorneosAsync(idUsuario);
        }
    }
}
